<!--if (Link == LinkType.A)
{
    <a @attributes="AdditionalAttributes">
        @ChildContent
    </a>
}
else if (Link == LinkType.NavLink)
{
    <NavLink @attributes="AdditionalAttributes">
        @ChildContent
    </NavLink>
}
else
{
    <button @attributes="AdditionalAttributes">
        @ChildContent
    </button>
}-->

@code{
/*
    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; }

    [Parameter]
    public string Tag { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }
    private LinkType Link { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        Link = GetLinkType(Tag);
    }

    private LinkType GetLinkType(string type)
    {   
        var link = LinkType.A;
        if(type.Equals("button"))
        {
            link = LinkType.Button;
        }
        else if(type.Equals("navlink"))
        {
            link = LinkType.NavLink;
        }
        
        return link;
    }

    private enum LinkType
    {
        A,
        Button,
        NavLink
    }
    */
}
