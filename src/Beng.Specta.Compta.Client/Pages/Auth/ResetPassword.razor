@page "/reset-password/{Email}/{Code}"
@layout LoginLayout
@using Beng.Specta.Compta.Core.DTOs.Auth
@inject HttpWebApiClient WebApiClient
@inject ILogger<ForgotPassword> Logger

<SfTab OverflowMode="OverflowMode.Popup">
    <TabItems>
        <TabItem>
            <ChildContent>
                <TabHeader Text="Re-initialiser son mot de passe"></TabHeader>
            </ChildContent>
            <ContentTemplate>
                <VaSeparator/>
                <div class="pa-3">
                    <EditForm Model="@_userInfo" OnValidSubmit="ResetUserPassword">
                        <DataAnnotationsValidator />
                        <ServerSideValidator @ref="ServerSideValidator" />

                        <VaInput @bind-Value="_userInfo.Email"
                            Type="@VaInputType.Email"
                            Label="Email" />

                        <VaInput @bind-Value="_userInfo.NewPassword"
                            Type="@VaInputType.Password"
                            Label="Mot de passe" />
                            
                        <VaInput @bind-Value="_userInfo.ConfirmPassword"
                            Type="@VaInputType.Password"
                            Label="Confirmer votre mot de passe" />

                        <div class="auth-layout__options d-flex align--center justify--space-between">
                            <NavLink class="ml-1 link" style="@LinkStyle" href="/login">Se connecter ?</NavLink>
                        </div>

                        <div class="d-flex justify--center mt-3">
                            <VaButton Type="@ButtonType.Submit" class="my-0">Modifier</VaButton>
                        </div>
                    </EditForm>
                </div>
            </ContentTemplate>
        </TabItem>
    </TabItems>
</SfTab>

@code{

    [CascadingParameter] public ThemeDictionary ContextTheme { get; set; }
    [Parameter] public string Email { get; set; }
    [Parameter] public string Code { get; set; }

    private ResetPasswordDto _userInfo = new();
    private ServerSideValidator ServerSideValidator { get; set; }

    private string LinkStyle =>
        StyleBuilder.Empty()
            .AddStyle("color", ContextTheme[ThemeDictionary.PrimaryKey], ContextTheme.IsInverted)
            .Build();

    private async Task ResetUserPassword()
    {
        await WebApiClient.CreateRequest("api/account/resetpassword")
            .OnBadRequest<Dictionary<string, List<string>>>(errors => ServerSideValidator.DisplayErrors(errors, true))
            .OnOK("Your password has been reset you can now logon.", "/login")
            .PostAsync(_userInfo);
    }

    protected override void OnInitialized()
    {
        _userInfo.Email = Email;
        _userInfo.Code = Code;
    }
}