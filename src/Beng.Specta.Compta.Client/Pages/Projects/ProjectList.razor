@page "/projects"
@using Syncfusion.Blazor.DropDowns
@using Beng.Specta.Compta.Core.DTOs
@inject ILogger<ProjectList> Logger
@inject HttpClient HttpClient

<div class="@MainClass">
    <VaCard IsVisible="@(!Projects.Any())" ExtraClass="flex xs12 md6 xl3">
        <BodyContent>
            <SfListBox Value=@SelectedValue DataSource="@Projects" TValue="string[]" TItem="ProjectDTO">
                <ListBoxSelectionSettings ShowCheckbox="true"></ListBoxSelectionSettings>
            </SfListBox>
        </BodyContent>
    </VaCard>
    <GenericPage Title="Projects"
                    Loader="@LoadProjects"
                    Icon="vuestic-iconset vuestic-iconset-statistics"
                    NewText="Initier un projet"
                    ExtraClass="@DetailsClass">
        <Loading>
            <h1>Loading...</h1>
        </Loading>
        <Empty>
            Vous n'avez pas encore de projets en cours.
        </Empty>
        <Item Context="item">
            <div class="col">
                <h5>@item.Name</h5>
                Code:
                <strong>@item.Code</strong>;
                Date de début:
                <strong>£@item.StartDate</strong>
            </div>
            <div class="col">
                Durée: <strong>@item.Duration</strong>
            </div>
        </Item>
    </GenericPage>
</div>

@code{

    private string[] SelectedValue = new string[] { "Hennessey Venom" };

    private async Task<IList<ProjectDTO>> LoadProjects()
    {
        //await Task.Delay(3000);

        return new List<ProjectDTO>();//GetProjects();
    }

    private IList<ProjectDTO> Projects
    {
        get
        {
            var groups = new string[]
            {
            "ZZ",
            "TT",
            "Tchoupi",
            "Kouroukour",
            "Birao",
            "Bangassou",
            "Bambari"
            };

            long id = 0;
            var projectDtos = Enumerable.Range(1, 5).Select(x => new ProjectDTO
            {
                Id = ++id,
                Code = groups[new Random().Next(groups.Length)].Substring(0, 2).Trim() + $"_{id}",
                Name = groups[new Random().Next(groups.Length)],
                StartDate = DateTime.Now.AddDays(id),
                Duration = (int)id
            }).ToList();

            return projectDtos;
        }
    }

    private string MainClass => !Projects.Any() ? "row row-equal" : string.Empty;

    private string DetailsClass => !Projects.Any() ? "flex xs12 md6 xl9" : null;

}
