<VaDropdown class="@ComputedClass"
    IsBoundaryBody="true" offset="0, 16"
    @bind-value="IsExpanded"
    @attributes="@AdditionalAttributes">
    <Anchor>
        <span class="profile-dropdown__anchor" style="@ComputedAnchorStyle">
            <span>@Label</span>
            <VaIcon Name="@AnchorIconClass" class="pa-1" />
        </span>
    </Anchor>
    <Content>
        <div class="profile-dropdown__content pl-4 pr-4 pt-2 pb-2">
        @foreach(var option in Options)
        {
            <NavLink id="@option.Label" class="profile-dropdown__item pt-1 pb-1 mt-2 mb-2" href="@option.Value">
                @option.Label
            </NavLink>
        }
        </div>
    </Content>
</VaDropdown>

@code{

    [Parameter(CaptureUnmatchedValues = true)] public IDictionary<string, object> AdditionalAttributes { get; set; }
    [CascadingParameter] public ThemeDictionary ContextTheme { get; set; }
    [Parameter] public string Class { get; set; }
    [Parameter] public string Label { get; set; }

    private bool IsExpanded { get; set; }

    private string AnchorIconClass =>  IsExpanded ? "fa fa-angle-up" : "fa fa-angle-down";

    private string ComputedClass =>
        CssBuilder.Default("profile-dropdown")
            .AddClass(Class, !string.IsNullOrWhiteSpace(Class))
            .Build();

    private string ComputedAnchorStyle =>
        StyleBuilder.Default("color", ContextTheme[ThemeDictionary.PrimaryKey])
            .Build();

    private IReadOnlyCollection<OptionType> Options { get; } = new List<OptionType>
    {
        new OptionType { Label = "Profile", Value = "/profile" },
        new OptionType { Label = "Logout", Value = "/login" },
    };
}
