<VaDropdown ExtraClass="@ComputedClass" ShowContent="@ShouldShowsContent" boundary-body offset="0, 16px">
    <Anchor>
        <span class="profile-dropdown__anchor" style="@ComputedAnchorClass">
            @ChildContent
            <VaIcon Name="@AnchorIconClass" ExtraClass="pa-1" />
        </span>
    </Anchor>
    <Content>
        <div class="profile-dropdown__content pl-4 pr-4 pt-2 pb-2">
        @foreach(var option in Options)
        {
            <NavLink id="@option.Name" class="profile-dropdown__item pt-1 pb-1 mt-2 mb-2" href="@option.Url">
                @option.Name
            </NavLink>
        }
        </div>
    </Content>
</VaDropdown>

@code{

    [Parameter(CaptureUnmatchedValues = true)]
    public IDictionary<string, object> AdditionalAttributes { get; set; }
    
    [CascadingParameter]
    public ThemeStore ContextTheme { get; set; }

    [Parameter]
    public string ExtraClass { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    private bool ShouldShowsContent { get; set; }
    private string ComputedClass => $"profile-dropdown {ExtraClass ?? string.Empty}";
    private string ComputedAnchorClass => ComputeAnchorClass();
    private string AnchorIconClass =>  ShouldShowsContent ? "fa fa-angle-up" : "fa fa-angle-down";

    private string ComputeAnchorClass()
    {
        var anchorClass = new StyleType();
        if(ContextTheme == null)
        {
            return anchorClass.ToString();
        }

        anchorClass.Color = ContextTheme[ThemeStore.PrimaryKey].ToString();
        return anchorClass.ToString();
    }

    private IReadOnlyCollection<OptionLink> Options => new List<OptionLink>
    {
        new OptionLink { Name = "Profile", Url = "/profile" },
        new OptionLink { Name = "Logout", Url = "/login" },
    };

    private class OptionLink
    {
        public string Name { get; set; }
        public string Url { get; set; }
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
    }
}
