@implements IDisposable
@inject ThemeState ThemeState
@inject SpinnerState SpinnerState

@if (IsVisible)
{
<div class="page-loader">
    <div class="loader">
        <SemipolarSpinner Color="@ContextTheme[ThemeDictionary.PrimaryKey]" Size="100" AnimationDuration="1200" />
    </div>
</div>
}
@ChildContent

@code{

    [Parameter] public RenderFragment? ChildContent { get; set; }

    // For request to server, show spinner for waiting to render
    private bool IsVisible => SpinnerState.IsVisible;
    private ThemeDictionary ContextTheme => ThemeState.SelectedTheme;

    protected override async Task OnInitializedAsync()
    {
        SpinnerState.OnChange += StateHasChanged;

        await base.OnInitializedAsync();
    }

    public void Dispose()
    {
        SpinnerState.OnChange -= StateHasChanged;
    } 
}