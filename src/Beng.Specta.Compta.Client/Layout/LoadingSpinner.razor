@inject SpinnerService SpinnerService;
@implements IDisposable

@if (IsVisible)
{
<div class="page-loader">
    <div class="loader">
        <SemipolarSpinner Color="@ContextTheme[ThemeDictionary.PrimaryKey]" Size="100" AnimationDuration="1200" />
    </div>
</div>
}

@code{

    [CascadingParameter] public ThemeDictionary ContextTheme { get; set; }

    // For request to server, show spinner for waiting to render
    protected bool IsVisible { get; set; } 

    public void ToggleSpinnerVisibility()
    {
        IsVisible = !IsVisible;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        SpinnerService.OnShow += ToggleSpinnerVisibility;
        SpinnerService.OnHide += ToggleSpinnerVisibility;
        await base.OnInitializedAsync();
    }

    public void Dispose()
    {
        SpinnerService.OnShow -= ToggleSpinnerVisibility;
        SpinnerService.OnHide -= ToggleSpinnerVisibility;
    } 
}